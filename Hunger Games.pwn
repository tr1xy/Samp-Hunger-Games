/***
 *	    __  ________
 *	   / / / / ____/
 *	  / /_/ / / __  
 *	 / __  / /_/ /  
 *	/_/ /_/\____/   
 *
 *	@Author         Andrija (V0ID) TerziÄ‡
 *	@Date           13th April 2020
 *	@Weburl         https://github.com/TerzicScript/Samp-Hunger-Games
 *	@Credits        Babo, Carlo, DraHi, MajK, Dimo Hoster
 */


#tryinclude <a_samp>
#tryinclude <easyDialog>
#tryinclude <YSI_Coding\y_va>
#tryinclude <YSI_Data\y_iterate>
#tryinclude <YSI_Coding\y_timers>
#tryinclude <YSI_Visual\y_commands>
#tryinclude <YSI_Coding\y_hooks>

#if !defined _INC_a_samp
	#error Please include samp-stdlib (https://github.com/pawn-lang/samp-stdlib)!
#endif

#if !defined _INC_y_va
	#error Please include YSI (https://github.com/pawn-lang/YSI-Includes)!
#endif

#if !defined _INC_y_iterate
	#error Please include YSI (https://github.com/pawn-lang/YSI-Includes)!
#endif

#if !defined _INC_y_timers
	#error Please include YSI (https://github.com/pawn-lang/YSI-Includes)!
#endif

#if !defined _INC_y_timers
	#error Please include YSI (https://github.com/pawn-lang/YSI-Includes)!
#endif

#if !defined _INC_y_commands
	#error Please include YSI (https://github.com/pawn-lang/YSI-Includes)!
#endif

#if !defined _INC_y_hooks
	#error Please include YSI (https://github.com/pawn-lang/YSI-Includes)!
#endif

#if !defined _easyDialog_included
	#error Please include easyDialog (https://github.com/Awsomedude/easyDialog)!
#endif

/// <sumarry>
/// Stores the hunger game slots, you must modify the positions too
/// </sumarry>
#define MAX_HUNGER_GAMES_SLOTS         (19)

/// <sumarry>
/// Stores the player's username
/// </sumarry>
static PlayerName[MAX_PLAYERS][MAX_PLAYER_NAME];

/// <sumarry>
/// Stores the 'true' or 'false' (bool)
/// </sumarry>
static bool: playerJoinedHunger[MAX_PLAYERS];

/// <sumarry>
/// Stores the gettime() + x
/// </sumarry>
static canOpenBox[MAX_PLAYERS];

/// <sumarry>
/// Stores the 'true' or 'false' (bool)
/// </sumarry>
static bool: hungerGamesStarted;

/// <sumarry>
/// Stores 'true' or 'false' (bool)
/// </sumarry>
static bool: hungerGameStarting;

/// <sumarry>
/// Stores 'true' or 'false' (bool)
/// </sumarry>
static bool: openedMegaBox[MAX_PLAYERS];

/// <sumarry>
/// Game Text message timer
/// </sumarry>
static Timer: Timer_BoxMessage[MAX_PLAYERS];

/// <sumarry>
/// Stores only the players that joined hunger games
/// </sumarry>
static Iterator: HungerPlayers<MAX_HUNGER_GAMES_SLOTS>;

/// <sumarry>
/// Box Object PosX, PosY, PosZ, RotX, RotY, RotZ
/// </sumarry>
static const Float:boxObject[28][6] =
{
	{ 583.04840, 7429.41992, 6.66760, 4.00000, 13.00000, -32.86000 },
	{ 563.26251, 7481.78467, 12.90977, 0.00000, 0.00000, 0.00000 },
	{ 521.76953, 7504.37207, 8.52020, 11.00000, 0.00000, 0.00000 },
	{ 574.85034, 7373.64063, 12.90386, 0.00000, 0.00000, -90.12002 },
	{ 426.75552, 7497.69092, 11.44640, 10.00000, 0.00000, 13.38000 },
	{ 480.70911, 7288.23779, 9.36310, 10.00000, 3.00000, 129.31200 },
	{ 384.96576, 7510.07031, 11.25880, 10.00000, 0.00000, 0.00000 },
	{ 347.32455, 7369.50488, 10.86900, 10.00000, 3.00000, 166.39198 },
	{ 376.23975, 7316.32324, 11.76366, 10.00000, 3.00000, 129.31203 },
	{ 528.83698, 7595.62695, 48.52790, 18.00000, 0.00000, -16.00000 },
	{ 329.49438, 7417.42773, 16.71580, 10.00000, 3.00000, 0.08000 },
	{ 605.25372, 7251.98975, 46.54920, 0.00000, 0.00000, 48.72000 },
	{ 672.38708, 7300.24658, 62.05600, -7.00000, -10.00000, 2.00000 },
	{ 306.29230, 7520.32031, 48.19660, 20.00000, 0.00000, 17.00000 },
	{ 543.14771, 7205.82959, 50.15845, 0.00000, 0.00000, 0.00000 },
	{ 328.10349, 7560.86621, 45.17260, 15.00000, 0.00000, 53.00000 },
	{ 275.06369, 7453.48291, 44.84110, 11.00000, 0.00000, 69.48000 },
	{ 467.03610, 7657.81396, 42.70420, -19.00000, 0.00000, -69.41999 },
	{ 409.76300, 7658.84082, 68.01340, 0.00000, 0.00000, 0.00000 },
	{ 371.72879, 7185.23047, 70.46090, -19.00000, 0.00000, -2.00000 },
	{ 240.42140, 7495.49902, 75.75180, -30.00000, 0.00000, -67.00000 },
	{ 569.55902, 7407.53906, 6.76510, 0.00000, 0.00000, 0.00000 },
	{ 534.09668, 7349.23682, 5.52830, 0.00000, 0.00000, 0.00000 },
	{ 451.31879, 7311.72217, 6.28720, 0.00000, 0.00000, 0.00000 },
	{ 500.71619, 7313.56445, 3.01710, 0.00000, 0.00000, 0.00000 },
	{ 369.02100, 7347.65723, 9.39720, 0.00000, 0.00000, 0.00000 },
	{ 378.62231, 7461.41748, 4.17590, 0.00000, 0.00000, 0.00000 },
	{ 454.12970, 7520.75439, 13.41260, 0.00000, 0.00000, 0.00000 }
};

/// <sumarry>
/// Mega Object PosX, PosY, PosZ, RotX, RotY, RotZ
/// </sumarry>
static const Float:megaBoxObject[4][6] =
{
	{ 470.02332, 7422.81494, 1.45670, 0.00000, 0.00000, 0.00000 },
	{ 473.14664, 7407.60352, 1.45670, 0.00000, 0.00000, 0.00000 },
	{ 461.53339, 7397.27539, 1.45670, 0.00000, 0.00000, 0.00000 },
	{ 456.88779, 7394.87793, 1.49604, 0.00000, 0.00000, 0.00000 }
};

/// <sumarry>
/// Spawn Positions PosX, PosY, PosZ, CameraX, CameraY, CameraZ
/// </sumarry>
static const Float:spawnPositions[MAX_HUNGER_GAMES_SLOTS][6] =
{
	{ 439.3299, 7362.6885, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 454.0508, 7358.1528, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 468.7899, 7358.3267, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 482.8680, 7363.0225, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 495.5219, 7370.9502, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 504.6278, 7382.9180, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 510.1655, 7396.6069, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 511.1637, 7411.7080, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 507.6249, 7426.2534, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 500.5654, 7439.3320, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 489.2260, 7449.4365, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 475.8217, 7455.9771, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 461.1184, 7458.1367, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 445.9854, 7455.7183, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 432.5828, 7449.7109, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 421.8511, 7439.3535, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 414.0779, 7426.2793, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 411.0470, 7411.5269, 1.7694, 462.2688, 7402.7905, 2.4960 },
	{ 412.4170, 7396.9771, 1.7694, 462.2688, 7402.7905, 2.4960 }
};

// ---
// Internal
// ---

/// <sumarry>
/// Creates the  HungerGame map
/// </sumarry>
static CreateHungerGamesMap()
{
	CreateObject(13649, 507.75546, 7426.21387, 0.16000, 0.00000, 0.00000, 291.42899);
	CreateObject(13649, 500.30334, 7439.12109, 0.16000, 0.00000, 0.00000, 308.57101);
	CreateObject(13649, 511.07227, 7411.68359, 0.16000, 0.00000, 0.00000, 274.28500);
	CreateObject(3406, 488.10782, 7422.05518, -0.58560, 0.00000, 0.00000, 11.52500);
	CreateObject(3499, 481.98383, 7424.29346, 8.45808, 270.00000, 0.00000, 10.99700);
	CreateObject(9131, 482.52994, 7420.42285, 9.39556, 108.00000, 0.00000, 10.99700);
	CreateObject(3499, 481.39114, 7427.34180, 8.45808, 270.00000, 0.00000, 10.99700);
	CreateObject(9131, 483.40213, 7419.03271, 12.07833, 126.00000, 0.00000, 10.99700);
	CreateObject(3499, 480.55600, 7429.77881, 2.85910, 0.00000, 0.00000, 0.00000);
	CreateObject(3499, 483.85617, 7414.62549, 8.45808, 270.00000, 0.00000, 10.99700);
	CreateObject(728, 480.36032, 7429.46436, 1.48623, 0.00000, 0.00000, 0.00000);
	CreateObject(9131, 483.95782, 7414.38867, 9.77493, 0.00000, 0.00000, 10.99700);
	CreateObject(9131, 483.83755, 7415.12891, 10.90646, 90.00000, 0.00000, 10.99700);
	CreateObject(3406, 491.28339, 7403.52490, -0.58560, 0.00000, 0.00000, 11.52500);
	CreateObject(9131, 484.36682, 7412.55176, 9.99061, 324.53601, 0.00000, 10.99700);
	CreateObject(9131, 483.98709, 7414.38037, 11.80758, 0.00000, 0.00000, 10.99700);
	CreateObject(9131, 483.81842, 7415.30078, 12.56983, 90.00000, 0.00000, 10.99700);
	CreateObject(9131, 483.74609, 7417.27295, 14.20738, 144.00000, 0.00000, 10.99700);
	CreateObject(3458, 483.66574, 7411.34961, -1.09314, 90.00000, 0.00000, 101.46900);
	CreateObject(923, 483.52289, 7411.22949, 2.25093, 0.00000, 0.00000, 263.26099);
	CreateObject(1362, 482.53430, 7412.71729, 2.09453, 0.00000, 0.00000, 0.00000);
	CreateObject(9131, 484.60480, 7411.29883, 9.77493, 0.00000, 0.00000, 10.99700);
	CreateObject(9131, 484.41605, 7412.23438, 11.80758, 35.46500, 0.00000, 10.99700);
	CreateObject(9131, 484.89047, 7409.93799, 9.77493, 0.00000, 0.00000, 11.00000);
	CreateObject(13649, 489.37778, 7449.25879, 0.16000, 0.00000, 0.00000, 325.71399);
	CreateObject(9131, 484.62146, 7411.29492, 11.80758, 0.00000, 0.00000, 10.99700);
	CreateObject(13649, 509.95816, 7396.82080, 0.16000, 0.00000, 0.00000, 257.14301);
	CreateObject(9131, 485.16379, 7408.51270, 9.13973, 90.00000, 0.00000, 10.99700);
	CreateObject(9131, 484.05112, 7414.53809, 15.57432, 162.00000, 0.00000, 10.99700);
	CreateObject(9131, 485.03479, 7409.20166, 10.90646, 90.00000, 0.00000, 10.99700);
	CreateObject(9131, 485.28424, 7409.12988, 12.56983, 90.00000, 0.00000, 10.99700);
	CreateObject(2973, 477.20709, 7426.01025, 1.49604, 0.00000, 0.00000, 205.52499);
	CreateObject(9131, 485.48102, 7407.84033, 11.80758, 0.00000, 0.00000, 10.99700);
	CreateObject(9131, 484.78320, 7411.72021, 16.04534, 180.00000, 0.00000, 10.99700);
	CreateObject(3499, 477.30841, 7429.06006, 8.45810, 90.00000, 0.00000, 102.38001);
	CreateObject(3499, 485.84000, 7404.45898, 8.45808, 90.00000, 0.00000, 11.00000);
	CreateObject(9131, 485.34100, 7408.42188, 15.57432, 198.00000, 0.00000, 10.99700);
	CreateObject(9131, 485.96555, 7405.97510, 14.20738, 216.00000, 0.00000, 10.99700);
	CreateObject(9131, 486.07620, 7403.99365, 12.07833, 234.00000, 0.00000, 10.99700);
	CreateObject(9131, 485.93805, 7402.97314, 9.39556, 252.00000, 0.00000, 10.99700);
	CreateObject(935, 487.21881, 7399.79395, 2.05924, 0.00000, 0.00000, 267.49500);
	CreateObject(2973, 473.91711, 7422.06592, 1.49604, 0.00000, 0.00000, 167.54495);
	CreateObject(935, 486.23993, 7399.66064, 2.05924, 0.00000, 0.00000, 0.00000);
	CreateObject(2973, 478.71664, 7407.44873, 1.49604, 0.00000, 0.00000, 205.52499);
	CreateObject(2991, 480.92355, 7402.20654, 2.08801, 0.00000, 0.00000, 336.94901);
	CreateObject(2991, 480.92383, 7402.20703, 3.26690, 0.00000, 0.00000, 336.94501);
	CreateObject(2991, 480.92383, 7402.20703, 4.40291, 0.00000, 0.00000, 336.94501);
	CreateObject(3499, 487.35883, 7396.77197, 8.45808, 90.00000, 0.00000, 10.99700);
	CreateObject(3499, 487.83319, 7394.00977, 2.85910, 0.00000, 0.00000, 0.00000);
	CreateObject(728, 488.08759, 7393.69238, 1.48623, 0.00000, 0.00000, 0.00000);
	CreateObject(2907, 470.14111, 7419.31738, 2.39399, 0.00000, 0.00000, 192.03000);
	CreateObject(1997, 470.08475, 7419.50342, 1.49604, 0.00000, 0.00000, 11.00000);
	CreateObject(3800, 481.11664, 7398.71436, 1.49604, 0.00000, 0.00000, 295.47198);
	CreateObject(18260, 471.65756, 7412.47461, 3.00204, 0.00000, 0.00000, 348.47400);
	CreateObject(3800, 477.13654, 7401.58252, 1.49604, 0.00000, 0.00000, 295.47198);
	CreateObject(1997, 468.63873, 7419.19629, 1.49604, 0.00000, 0.00000, 10.99700);
	CreateObject(2907, 468.64081, 7419.04980, 2.39399, 0.00000, 0.00000, 192.02499);
	CreateObject(3406, 468.55203, 7433.47217, -0.58560, 0.00000, 0.00000, -258.23517);
	CreateObject(3499, 484.83969, 7393.32715, 8.45810, 90.00000, 0.00000, 101.90002);
	CreateObject(2907, 467.27216, 7418.63818, 2.39399, 0.00000, 0.00000, 192.02499);
	CreateObject(1997, 467.16748, 7418.91797, 1.49604, 0.00000, 0.00000, 10.99700);
	CreateObject(3499, 466.93307, 7426.78564, 8.45810, 90.00000, 0.00000, -77.61999);
	CreateObject(621, 542.43658, 7450.39063, 3.79950, 0.00000, 0.00000, 0.00000);
	CreateObject(3066, 474.84598, 7399.85986, 2.57912, 0.00000, 0.00000, 18.08700);
	CreateObject(930, 466.07834, 7419.31738, 1.92040, 0.00000, 0.00000, 277.95999);
	CreateObject(1337, 476.08414, 7397.29932, 0.00000, 0.00000, 0.00000, 0.00000);
	CreateObject(930, 465.33096, 7419.16650, 1.92040, 0.00000, 0.00000, 277.95999);
	CreateObject(13649, 475.94952, 7455.72559, 0.16000, 0.00000, 0.00000, 342.85699);
	CreateObject(13649, 504.51303, 7382.94678, 0.16000, 0.00000, 0.00000, 240.00000);
	CreateObject(3800, 464.43729, 7415.89697, 1.49604, 0.00000, 0.00000, 295.47198);
	CreateObject(621, 533.45789, 7389.21094, 1.32182, 0.00000, 0.00000, 0.00000);
	CreateObject(3630, 462.21863, 7423.75391, 2.98867, 0.00000, 0.00000, 20.93301);
	CreateObject(3761, 468.03946, 7403.78662, 3.43743, 0.00000, 0.00000, 3.84000);
	CreateObject(3458, 461.62119, 7425.92578, -1.08130, 90.00000, 0.00000, 191.40800);
	CreateObject(6959, 464.87769, 7407.73584, 1.52729, 0.00000, 0.00000, 11.52500);
	CreateObject(6959, 465.00461, 7407.26660, 1.52729, 0.00000, 0.00000, 11.52600);
	CreateObject(6959, 464.87769, 7407.73584, -1.48772, 0.00000, 0.00000, 11.52500);
	CreateObject(930, 463.09668, 7412.04785, 1.81994, 0.00000, 0.00000, 0.00000);
	CreateObject(6959, 465.11963, 7407.39893, -3.85878, 0.00000, 0.00000, 11.52500);
	CreateObject(3458, 460.64835, 7425.72607, -1.08130, 90.00000, 0.00000, 191.40401);
	CreateObject(925, 461.59039, 7412.91553, 2.55795, 0.00000, 0.00000, 274.98300);
	CreateObject(925, 461.59082, 7412.91602, 4.54484, 0.00000, 0.00000, 274.98199);
	CreateObject(3761, 468.41678, 7398.07227, 3.43743, 0.00000, 0.00000, 3.84200);
	CreateObject(3499, 474.64157, 7391.26758, 8.45810, 90.00000, 0.00000, -79.00000);
	CreateObject(2973, 461.30215, 7409.36768, 1.49604, 0.00000, 0.00000, 306.80200);
	CreateObject(3406, 479.01401, 7385.88135, -0.58560, 0.00000, 0.00000, -78.65501);
	CreateObject(3633, 471.43784, 7391.51953, 1.97085, 0.00000, 0.00000, 0.00000);
	CreateObject(3633, 471.43750, 7391.51953, 2.88605, 0.00000, 0.00000, 0.00000);
	CreateObject(3499, 456.57767, 7424.51025, 8.45810, 90.00000, 0.00000, -77.61999);
	CreateObject(3458, 469.10376, 7389.20166, -1.09314, 90.00000, 0.00000, 11.52500);
	CreateObject(3458, 468.17560, 7389.00732, -1.09314, 90.00000, 0.00000, 11.52600);
	CreateObject(2669, 465.85501, 7391.36963, 2.72112, 0.00000, 0.00000, 123.26800);
	CreateObject(939, 457.97131, 7403.89111, 3.80999, 0.00000, 0.00000, 10.99700);
	CreateObject(13649, 461.21191, 7457.94727, 0.16000, 0.00000, 0.00000, 0.00000);
	CreateObject(3630, 453.69507, 7410.78418, 2.98867, 0.00000, 0.00000, 84.35300);
	CreateObject(13649, 495.22040, 7371.29395, 0.16000, 0.00000, 0.00000, 222.85699);
	CreateObject(3499, 450.93912, 7423.29443, 8.45810, 90.00000, 0.00000, -77.61999);
	CreateObject(3499, 464.33325, 7389.28516, 8.45810, 90.00000, 0.00000, -79.00000);
	CreateObject(621, 525.13458, 7481.90723, 2.58134, 0.00000, 0.00000, 0.00000);
	CreateObject(3406, 450.17444, 7429.86963, -0.58560, 0.00000, 0.00000, -258.23517);
	CreateObject(939, 452.94522, 7402.93799, 3.80999, 0.00000, 0.00000, 11.00000);
	CreateObject(3378, 450.15271, 7408.46387, 0.36963, 0.00000, 0.00000, 10.99700);
	CreateObject(18228, 497.11725, 7485.84766, -5.43975, 0.00000, 0.00000, 207.99699);
	CreateObject(3378, 452.61581, 7397.10498, 0.37923, 0.00000, 0.00000, 11.00000);
	CreateObject(18228, 570.83099, 7437.19238, 0.66025, 0.00000, 0.00000, 207.99300);
	CreateObject(3066, 453.06488, 7394.31006, 2.57912, 0.00000, 0.00000, 45.56701);
	CreateObject(3499, 444.51205, 7421.91016, 8.45810, 90.00000, 0.00000, -77.61999);
	CreateObject(3406, 461.23618, 7382.00342, -0.58560, 0.00000, 0.00000, -80.45500);
	CreateObject(9249, 554.08301, 7471.18359, -8.58579, 0.00000, 0.00000, 295.98801);
	CreateObject(728, 442.65732, 7421.41309, 1.48623, 0.00000, 0.00000, 0.00000);
	CreateObject(3499, 442.25024, 7421.29053, 2.85910, 0.00000, 0.00000, 0.00000);
	CreateObject(3458, 446.15378, 7403.60254, -1.08130, 90.00000, 0.00000, 281.58099);
	CreateObject(3499, 442.66293, 7418.59229, 8.45808, 270.00000, 0.00000, 10.99700);
	CreateObject(3499, 444.66324, 7408.39453, 8.45808, 270.00000, 0.00000, 10.99700);
	CreateObject(621, 543.36816, 7370.21191, 6.10909, 0.00000, 0.00000, 0.00000);
	CreateObject(3499, 454.01077, 7387.26904, 8.45810, 90.00000, 0.00000, -79.00000);
	CreateObject(3499, 446.67569, 7398.06641, 8.45808, 270.00000, 0.00000, 10.99700);
	CreateObject(13649, 446.47400, 7455.72559, 0.16000, 0.00000, 0.00000, 17.14300);
	CreateObject(13649, 482.90594, 7362.89844, 0.16000, 0.00000, 0.00000, 205.71400);
	CreateObject(621, 572.74902, 7402.67188, 7.16612, 0.00000, 0.00000, 0.00000);
	CreateObject(3499, 451.63824, 7386.79053, 8.45810, 90.00000, 0.00000, -79.00000);
	CreateObject(9249, 563.72003, 7385.43799, -8.83579, 0.00000, 0.00000, 215.99100);
	CreateObject(18228, 491.39688, 7494.28271, -2.52186, 0.00000, 0.00000, 300.22989);
	CreateObject(621, 555.23572, 7477.61719, 9.59937, 0.00000, 0.00000, 0.00000);
	CreateObject(3499, 448.54205, 7388.60059, 8.45808, 270.00000, 0.00000, 191.29700);
	CreateObject(728, 449.84756, 7385.83447, 1.48623, 0.00000, 0.00000, 0.00000);
	CreateObject(3406, 438.60422, 7411.72217, -0.58560, 0.00000, 0.00000, -168.17499);
	CreateObject(3499, 449.28131, 7386.40674, 2.85910, 0.00000, 0.00000, 0.00000);
	CreateObject(3406, 442.01068, 7393.38428, -0.58560, 0.00000, 0.00000, -168.17499);
	CreateObject(13649, 433.04575, 7449.25879, 0.16000, 0.00000, 0.00000, 34.28600);
	CreateObject(13649, 468.66388, 7358.50488, 0.16000, 0.00000, 0.00000, 188.57100);
	CreateObject(621, 462.05710, 7491.31934, 4.25080, 0.00000, 0.00000, 0.00000);
	CreateObject(621, 538.17487, 7349.26611, 4.15458, 0.00000, 0.00000, 0.00000);
	CreateObject(13649, 422.12018, 7439.12109, 0.16000, 0.00000, 0.00000, 51.42900);
	CreateObject(13649, 453.75964, 7358.50488, 0.16000, 0.00000, 0.00000, 171.42900);
	CreateObject(621, 443.73685, 7485.84473, 7.53279, 0.00000, 0.00000, 0.00000);
	CreateObject(706, 584.47681, 7465.34180, -18.72191, 0.00000, 0.00000, 359.99799);
	CreateObject(621, 528.97198, 7513.50488, 9.61828, 0.00000, 0.00000, 0.00000);
	CreateObject(13649, 414.66806, 7426.21387, 0.16000, 0.00000, 0.00000, 68.57100);
	CreateObject(13649, 439.51758, 7362.89844, 0.16000, 0.00000, 0.00000, 154.28600);
	CreateObject(823, 572.51813, 7359.41309, 12.94511, 0.00000, 0.00000, 220.00000);
	CreateObject(18228, 478.60526, 7516.00830, 9.44025, 0.00000, 0.00000, 247.99300);
	CreateObject(13649, 411.35156, 7411.68359, 0.16000, 0.00000, 0.00000, 85.71400);
	CreateObject(13649, 427.20313, 7371.29395, 0.16000, 0.00000, 0.00000, 137.14301);
	CreateObject(13649, 412.46536, 7396.82080, 0.16000, 0.00000, 0.00000, 102.85700);
	CreateObject(13649, 417.91049, 7382.94678, 0.16000, 0.00000, 0.00000, 120.00000);
	CreateObject(709, 528.26337, 7331.44531, -30.42654, 0.00000, 0.00000, 279.98099);
	CreateObject(18228, 521.29486, 7324.44238, 0.66025, 0.00000, 0.00000, 135.99300);
	CreateObject(18228, 580.11078, 7348.85498, 8.19025, 0.00000, 0.00000, 219.98500);
	CreateObject(18228, 606.89398, 7386.63086, 8.19025, 0.00000, 0.00000, 217.98900);
	CreateObject(729, 578.24127, 7502.77246, 28.22642, 0.00000, 0.00000, 0.00000);
	CreateObject(729, 605.91949, 7469.09033, 34.46502, 0.00000, 0.00000, 0.00000);
	CreateObject(621, 432.07309, 7507.67383, 11.48276, 0.00000, 0.00000, 0.00000);
	CreateObject(18228, 568.22388, 7327.38135, 8.19025, 0.00000, 0.00000, 203.98500);
	CreateObject(621, 469.77979, 7316.39307, 3.23292, 0.00000, 0.00000, 0.00000);
	CreateObject(767, 620.30927, 7393.97461, 8.98325, 0.00000, 0.00000, 73.99000);
	CreateObject(9249, 422.95508, 7507.15918, -5.37579, 0.00000, 0.00000, 341.98801);
	CreateObject(767, 609.64154, 7364.15332, 13.62325, 0.00000, 0.00000, 77.99600);
	CreateObject(767, 618.06464, 7379.73047, 9.98325, 0.00000, 0.00000, 87.99200);
	CreateObject(767, 602.75598, 7354.33643, 17.26325, 0.00000, 0.00000, 39.99800);
	CreateObject(18228, 467.92508, 7540.72266, 11.01025, 0.00000, 0.00000, 174.20900);
	CreateObject(823, 431.26611, 7524.06641, 16.46064, 0.00000, 0.00000, 250.00000);
	CreateObject(18228, 467.19724, 7544.86426, 11.01025, 0.00000, 0.00000, 171.98900);
	CreateObject(621, 437.01620, 7322.31299, 2.60443, 0.00000, 0.00000, 0.00000);
	CreateObject(18228, 564.76501, 7313.17969, 0.66025, 0.00000, 0.00000, 135.98900);
	CreateObject(767, 599.32330, 7339.71338, 17.26325, 0.00000, 0.00000, 30.00000);
	CreateObject(621, 401.57550, 7495.89014, 7.81329, 0.00000, 0.00000, 0.00000);
	CreateObject(754, 479.40439, 7301.27539, 6.80849, 0.00000, 0.00000, 2.00000);
	CreateObject(706, 632.81213, 7459.02051, 14.35809, 0.00000, 0.00000, 74.00000);
	CreateObject(791, 612.35834, 7500.56445, 30.71809, 0.00000, 0.00000, 219.97301);
	CreateObject(9249, 458.19449, 7304.91504, -11.08579, 0.00000, 0.00000, 156.00000);
	CreateObject(729, 635.15839, 7421.94434, 37.66524, 0.00000, 0.00000, 0.00000);
	CreateObject(791, 632.96014, 7456.86035, 33.21809, 0.00000, 0.00000, 245.97701);
	CreateObject(18228, 386.69208, 7479.37988, -16.77859, 0.00000, 0.00000, 306.00000);
	CreateObject(729, 628.03741, 7376.14453, 33.51057, 0.00000, 0.00000, 0.00000);
	CreateObject(18228, 383.30304, 7480.35547, -3.93975, 0.00000, 0.00000, 306.00000);
	CreateObject(18228, 428.67227, 7537.66504, 8.44025, 0.00000, 0.00000, 145.98500);
	CreateObject(729, 575.24091, 7539.56738, 39.47054, 0.00000, 0.00000, 0.00000);
	CreateObject(17031, 596.31042, 7529.31006, 24.13327, 19.98400, 0.00000, 295.98199);
	CreateObject(621, 369.55960, 7439.91699, 9.11768, 0.00000, 0.00000, 0.00000);
	CreateObject(709, 605.21649, 7329.36133, 34.26346, 0.00000, 0.00000, 185.98700);
	CreateObject(621, 366.81757, 7411.92480, 7.68964, 0.00000, 0.00000, 0.00000);
	CreateObject(13212, 641.29376, 7475.94775, 15.25587, 0.00000, 0.00000, 195.99800);
	CreateObject(621, 457.91074, 7292.92090, 8.57005, 0.00000, 0.00000, 0.00000);
	CreateObject(791, 554.78369, 7558.87305, 32.94809, 0.00000, 0.00000, 225.96400);
	CreateObject(709, 501.55557, 7566.69922, 33.64346, 0.00000, 0.00000, 325.99301);
	CreateObject(709, 604.02795, 7535.11914, -8.12654, 0.00000, 0.00000, 243.97400);
	CreateObject(729, 620.84161, 7341.20654, 39.61073, 0.00000, 0.00000, 0.00000);
	CreateObject(18228, 416.60959, 7310.34180, 0.66025, 0.00000, 0.00000, 95.99300);
	CreateObject(1242, 630.38922, 7348.34863, 41.17300, 0.00000, 0.00000, 335.00000);
	CreateObject(729, 559.14825, 7288.18994, 32.88485, 0.00000, 0.00000, 0.00000);
	CreateObject(709, 654.43640, 7413.40479, 39.92346, 0.00000, 0.00000, 79.99200);
	CreateObject(709, 365.14462, 7469.39990, -29.31654, 0.00000, 0.00000, 123.99500);
	CreateObject(1543, 444.74426, 7562.97266, 29.80883, 0.00000, 0.00000, 38.00000);
	CreateObject(754, 447.53250, 7281.81348, 11.22845, 0.00000, 0.00000, 100.00000);
	CreateObject(9249, 351.21289, 7419.94824, -5.37579, 0.00000, 0.00000, 53.98700);
	CreateObject(791, 643.59821, 7351.66113, 34.96809, 0.00000, 0.00000, 159.97701);
	CreateObject(1543, 657.45758, 7451.12207, 48.42614, 0.00000, 0.00000, 162.00000);
	CreateObject(824, 657.45758, 7451.12207, 48.52614, 0.00000, 0.00000, 209.00000);
	CreateObject(18228, 430.53427, 7287.46777, 0.66025, 0.00000, 0.00000, 75.99300);
	CreateObject(18228, 357.53543, 7478.08057, 4.41025, 0.00000, 0.00000, 335.99701);
	CreateObject(621, 373.74496, 7341.05078, 7.95244, 0.00000, 0.00000, 0.00000);
	CreateObject(729, 613.19141, 7313.17480, 42.21175, 0.00000, 0.00000, 0.00000);
	CreateObject(760, 661.05646, 7436.89648, 46.55931, 0.00000, 0.00000, 354.00000);
	CreateObject(754, 347.63901, 7419.93945, 13.76990, 0.00000, 0.00000, 359.00000);
	CreateObject(17031, 665.97052, 7395.65039, 27.38327, 19.98800, 0.00000, 251.98300);
	CreateObject(13212, 640.65576, 7331.82422, 15.25587, 0.00000, 0.00000, 137.99600);
	CreateObject(13212, 527.80383, 7588.10889, 15.25587, 0.00000, 0.00000, 231.99899);
	CreateObject(709, 436.97061, 7570.72705, 31.62346, 0.00000, 0.00000, 231.99500);
	CreateObject(709, 521.23309, 7266.01074, 34.26346, 0.00000, 0.00000, 239.98199);
	CreateObject(824, 613.13300, 7548.82227, 40.39512, 0.00000, 0.00000, 129.00000);
	CreateObject(621, 385.48361, 7311.81641, 8.89284, 0.00000, 0.00000, 0.00000);
	CreateObject(18228, 358.46353, 7348.32422, 0.55025, 0.00000, 0.00000, 21.99300);
	CreateObject(733, 494.46954, 7591.42578, 40.58474, 0.00000, 0.00000, 0.00000);
	CreateObject(17031, 663.14410, 7363.21338, 31.59327, 3.98800, 0.00000, 317.98401);
	CreateObject(17031, 639.19128, 7323.12500, 34.84327, 3.99100, 0.00000, 335.98499);
	CreateObject(709, 596.77130, 7280.65234, -4.30654, 0.00000, 0.00000, 221.98100);
	CreateObject(17031, 586.68317, 7275.65186, 25.10327, 349.99100, 0.00000, 17.98500);
	CreateObject(754, 443.61871, 7581.74854, 36.98744, 0.00000, 0.00000, 345.00000);
	CreateObject(709, 679.74066, 7414.42236, 9.50346, 0.00000, 0.00000, 307.97800);
	CreateObject(18228, 460.15073, 7260.34961, 6.41025, 0.00000, 0.00000, 185.98199);
	CreateObject(1242, 545.17908, 7588.81152, 49.79732, 0.00000, 0.00000, 305.00000);
	CreateObject(760, 545.17908, 7588.81152, 49.89732, 0.00000, 0.00000, 140.00000);
	CreateObject(709, 660.75098, 7338.42480, 5.86346, 0.00000, 0.00000, 201.97900);
	CreateObject(9249, 362.16437, 7327.20166, -5.37579, 0.00000, 0.00000, 113.98300);
	CreateObject(791, 610.33893, 7286.01953, 36.71809, 0.00000, 0.00000, 159.98000);
	CreateObject(18228, 332.32318, 7460.82129, 7.05025, 0.00000, 0.00000, 45.99500);
	CreateObject(729, 659.51428, 7502.49902, 60.09995, 0.00000, 0.00000, 0.00000);
	CreateObject(18228, 437.59592, 7261.36328, 4.41025, 0.00000, 0.00000, 185.98300);
	CreateObject(791, 558.73462, 7256.88574, 33.29809, 0.00000, 0.00000, 105.98100);
	CreateObject(621, 332.50058, 7383.77686, 10.91936, 0.00000, 0.00000, 0.00000);
	CreateObject(706, 586.59521, 7588.27881, 22.59809, 0.00000, 0.00000, 359.99500);
	CreateObject(729, 642.71619, 7534.39746, 56.70582, 0.00000, 0.00000, 0.00000);
	CreateObject(18228, 325.02200, 7439.04688, 6.30025, 0.00000, 0.00000, 45.99400);
	CreateObject(824, 419.28296, 7267.56348, 32.86931, 0.00000, 0.00000, 78.00000);
	CreateObject(18228, 332.70166, 7485.84082, 4.98025, 0.00000, 0.00000, 335.99500);
	CreateObject(791, 470.37225, 7605.83447, 30.69809, 0.00000, 0.00000, 225.96100);
	CreateObject(706, 330.48239, 7481.64746, -15.01191, 0.00000, 0.00000, 5.98800);
	CreateObject(791, 388.31067, 7567.73486, 29.44809, 0.00000, 0.00000, 209.96100);
	CreateObject(18228, 349.89651, 7326.11133, 4.65025, 0.00000, 0.00000, 93.98800);
	CreateObject(13212, 545.65527, 7243.33154, 15.25587, 0.00000, 0.00000, 103.99400);
	CreateObject(706, 389.64752, 7574.50195, 4.32809, 0.00000, 0.00000, 307.99100);
	CreateObject(706, 475.36136, 7614.46875, 12.67809, 0.00000, 0.00000, 307.99500);
	CreateObject(729, 452.94495, 7245.67090, 33.66003, 0.00000, 0.00000, 0.00000);
	CreateObject(18228, 317.69547, 7454.11816, 11.26025, 0.00000, 0.00000, 295.99399);
	CreateObject(13212, 541.33606, 7615.13428, 24.60587, 0.00000, 0.00000, 229.99800);
	CreateObject(791, 525.59766, 7613.98291, 45.69809, 0.00000, 0.00000, 145.96800);
	CreateObject(729, 522.34070, 7238.14355, 45.69795, 0.00000, 0.00000, 0.00000);
	CreateObject(18228, 342.75583, 7323.28223, 3.94025, 0.00000, 0.00000, 5.98900);
	CreateObject(18228, 331.30087, 7334.90381, 11.86025, 0.00000, 0.00000, 347.98901);
	CreateObject(13212, 383.71896, 7582.27734, 10.22587, 0.00000, 0.00000, 274.00000);
	CreateObject(791, 500.60864, 7229.32617, 35.83809, 0.00000, 0.00000, 123.98200);
	CreateObject(18228, 307.89154, 7429.96387, 6.30025, 0.00000, 0.00000, 295.99399);
	CreateObject(709, 658.55597, 7303.34766, 55.22346, 0.00000, 0.00000, 99.99100);
	CreateObject(17031, 466.00034, 7229.59375, 21.96327, 349.99100, 0.00000, 351.98999);
	CreateObject(13212, 677.31403, 7317.52002, 28.13587, 0.00000, 0.00000, 137.99400);
	CreateObject(18306, 637.22241, 7578.87305, 53.26341, 0.00000, 0.00000, 43.97000);
	CreateObject(768, 300.90781, 7445.69531, 15.77333, 0.00000, 0.00000, 150.00000);
	CreateObject(791, 405.40680, 7247.43945, 33.31809, 0.00000, 0.00000, 97.98500);
	CreateObject(768, 300.07748, 7412.34375, 12.02333, 0.00000, 0.00000, 163.99200);
	CreateObject(768, 299.37933, 7427.99463, 13.31333, 0.00000, 0.00000, 177.99600);
	CreateObject(13212, 697.92358, 7505.35986, 41.87587, 0.00000, 0.00000, 193.99600);
	CreateObject(768, 301.92654, 7464.30762, 18.52333, 0.00000, 0.00000, 163.99500);
	CreateObject(824, 555.57404, 7623.04004, 59.53969, 0.00000, 0.00000, 257.00000);
	CreateObject(709, 339.21036, 7548.57715, 37.87346, 0.00000, 0.00000, 89.99700);
	CreateObject(768, 302.26587, 7479.75391, 18.91333, 0.00000, 0.00000, 163.99300);
	CreateObject(709, 364.24176, 7272.28369, 35.89346, 0.00000, 0.00000, 305.97501);
	CreateObject(18306, 710.76727, 7475.43164, 53.26341, 0.00000, 0.00000, 11.97300);
	CreateObject(823, 553.13696, 7221.96338, 50.13712, 0.00000, 0.00000, 26.00000);
	CreateObject(1543, 548.25708, 7630.13379, 59.61085, 0.00000, 0.00000, 111.00000);
	CreateObject(729, 450.19284, 7221.03564, 40.85592, 0.00000, 0.00000, 0.00000);
	CreateObject(768, 304.18668, 7498.91602, 18.91333, 0.00000, 0.00000, 145.99300);
	CreateObject(733, 294.13770, 7448.37402, 37.20216, 0.00000, 0.00000, 0.00000);
	CreateObject(733, 292.98520, 7400.97852, 33.15609, 0.00000, 0.00000, 0.00000);
	CreateObject(709, 290.83994, 7420.59619, 33.49346, 0.00000, 0.00000, 167.99899);
	CreateObject(733, 331.67953, 7298.16797, 31.42511, 0.00000, 0.00000, 0.00000);
	CreateObject(729, 371.98682, 7257.67578, 41.72922, 0.00000, 0.00000, 0.00000);
	CreateObject(706, 324.83203, 7549.77246, 11.35809, 0.00000, 0.00000, 5.99100);
	CreateObject(709, 300.18839, 7357.40381, 34.49346, 0.00000, 0.00000, 94.00000);
	CreateObject(13212, 405.78177, 7229.09863, 15.25587, 0.00000, 0.00000, 59.99100);
	CreateObject(733, 305.48975, 7509.34766, 43.59043, 0.00000, 0.00000, 0.00000);
	CreateObject(824, 505.31219, 7206.26465, 49.54263, 0.00000, 0.00000, 104.00000);
	CreateObject(337, 550.45581, 7209.29004, 50.13712, 90.00000, 0.00000, 291.00000);
	CreateObject(823, 529.51166, 7201.47949, 50.13712, 0.00000, 0.00000, 349.00000);
	CreateObject(18306, 709.05322, 7324.06445, 53.26341, 0.00000, 0.00000, 335.97699);
	CreateObject(824, 461.42084, 7648.85840, 45.68649, 0.00000, 0.00000, 61.00000);
	CreateObject(733, 313.41754, 7543.45215, 50.07284, 0.00000, 0.00000, 0.00000);
	CreateObject(791, 308.52832, 7309.40723, 31.00809, 0.00000, 0.00000, 59.98700);
	CreateObject(791, 279.69736, 7463.96777, 35.59809, 0.00000, 0.00000, 0.00000);
	CreateObject(17031, 337.41422, 7589.10645, 35.63327, 350.00000, 0.00000, 250.00000);
	CreateObject(709, 296.98639, 7528.14111, 50.44346, 0.00000, 0.00000, 167.99699);
	CreateObject(709, 414.97311, 7639.68164, 60.45347, 0.00000, 0.00000, 231.99300);
	CreateObject(709, 298.14828, 7307.94727, -1.30654, 0.00000, 0.00000, 219.98500);
	CreateObject(17031, 280.71594, 7351.06738, 29.81327, 349.99100, 0.00000, 355.98999);
	CreateObject(17031, 282.58286, 7509.86328, 33.13327, 349.99701, 0.00000, 223.99899);
	CreateObject(709, 424.80154, 7203.22852, 53.10346, 0.00000, 0.00000, 167.98000);
	CreateObject(709, 321.07010, 7269.73242, -1.30654, 0.00000, 0.00000, 301.98499);
	CreateObject(709, 275.23370, 7502.05225, 3.58346, 0.00000, 0.00000, 93.99200);
	CreateObject(733, 274.41370, 7487.93359, 46.23814, 0.00000, 0.00000, 0.00000);
	CreateObject(18306, 591.66388, 7198.26563, 53.26341, 0.00000, 0.00000, 297.97900);
	CreateObject(13212, 279.62341, 7525.91504, 16.64587, 0.00000, 0.00000, 303.98199);
	CreateObject(13212, 260.69272, 7466.54297, 18.64587, 0.00000, 0.00000, 343.98700);
	CreateObject(13212, 289.31424, 7302.05176, 15.25587, 0.00000, 0.00000, 9.99100);
	CreateObject(17031, 320.24490, 7259.14844, 32.96575, 0.00000, 0.00000, 322.00000);
	CreateObject(709, 258.42300, 7382.16064, 4.15346, 0.00000, 0.00000, 219.98801);
	CreateObject(18306, 531.73480, 7674.54199, 53.26341, 0.00000, 0.00000, 41.96700);
	CreateObject(791, 288.04099, 7558.47119, 52.57809, 0.00000, 0.00000, 332.00000);
	CreateObject(729, 400.53406, 7195.14990, 64.51914, 0.00000, 0.00000, 0.00000);
	CreateObject(17031, 304.06821, 7260.06543, 29.96575, 14.00000, 0.00000, 131.99800);
	CreateObject(791, 352.55331, 7633.73389, 56.52809, 0.00000, 0.00000, 209.96001);
	CreateObject(733, 293.00305, 7275.63672, 46.58322, 0.00000, 0.00000, 0.00000);
	CreateObject(17031, 307.75980, 7253.03271, 31.71575, 0.00000, 0.00000, 329.99799);
	CreateObject(1242, 328.47919, 7235.72461, 52.98808, 0.00000, 0.00000, 233.00000);
	CreateObject(17031, 242.02847, 7393.63574, 36.02327, 349.99100, 0.00000, 287.99500);
	CreateObject(791, 376.41537, 7196.77734, 57.85809, 0.00000, 0.00000, 97.98200);
	CreateObject(13212, 349.80438, 7643.64404, 34.95587, 0.00000, 0.00000, 265.99899);
	CreateObject(760, 305.18625, 7250.82715, 53.48231, 0.00000, 0.00000, 308.00000);
	CreateObject(823, 252.54245, 7345.68652, 58.30185, 0.00000, 0.00000, 148.00000);
	CreateObject(1578, 371.38040, 7655.53320, 69.47021, 0.00000, 0.00000, 194.00000);
	CreateObject(709, 242.38136, 7358.23047, 56.76346, 0.00000, 0.00000, 0.00000);
	CreateObject(13212, 286.45947, 7593.91748, 34.95587, 0.00000, 0.00000, 333.99500);
	CreateObject(13212, 401.34421, 7169.37891, 40.87587, 0.00000, 0.00000, 59.99100);
	CreateObject(754, 232.16064, 7374.42578, 59.53464, 0.00000, 0.00000, 38.00000);
	CreateObject(760, 358.70071, 7661.50977, 69.83712, 0.00000, 0.00000, 325.00000);
	CreateObject(791, 248.16931, 7314.95117, 50.84809, 0.00000, 0.00000, 7.98700);
	CreateObject(18306, 439.52832, 7701.11084, 53.26341, 0.00000, 0.00000, 92.00000);
	CreateObject(18306, 419.58664, 7157.45508, 53.26341, 0.00000, 0.00000, 267.98099);
	CreateObject(733, 256.82263, 7279.79883, 60.51805, 0.00000, 0.00000, 0.00000);
	CreateObject(13212, 242.38197, 7289.34375, 33.37587, 0.00000, 0.00000, 1.97800);
	CreateObject(733, 271.85809, 7247.43506, 54.93170, 0.00000, 0.00000, 0.00000);
}

/// <sumarry>
/// Random math function (just between two numbers)
/// </sumarry>
static random_int(min, max)
{    
	return (random(max - min) + min);
}

// ---
// Hooks
// ---

hook OnGameModeInit()
{
	// Boxes
	for(new i = 0; i < sizeof(boxObject); ++i)
	{
		if(CreateObject(2969, boxObject[i][0], boxObject[i][1], boxObject[i][2], boxObject[i][3], boxObject[i][4], boxObject[i][5]) != INVALID_OBJECT_ID)
		{
			printf("[HG] Kutija broj %i je kreirana na X: %.2f Y: %.2f Z: %.2f", boxObject[i][1], boxObject[i][2], boxObject[i][3]);
			continue; // Nastavi loop
		}
		else
		{
			printf("[HG] Neuspelo kreiranje kutije ID %d (limit objekata od %d je prekoracen)!", i, MAX_OBJECTS);
			break; // Zaustavi loop jer dalje nece moci da se kreira svakako
		}
	}

	// Box Labels
	for(new i = 0; i < sizeof(boxObject); ++i)
	{
		if(Create3DTextLabel("/kutija", 0xF81414FF, boxObject[i][0], boxObject[i][1], boxObject[i][2], 20.0, 0) != INVALID_3DTEXT_ID)
		{
			printf("[HG] Label za kutiju broj %i je kreiran na X: %.2f Y: %.2f Z: %.2f", boxObject[i][1], boxObject[i][2], boxObject[i][3]);
			continue; // Nastavi loop
		}
		else
		{
			printf("[HG] Neuspelo kreiranje labela za kutiju ID %d (limit labela od %d je prekoracen)!", i, _:MAX_3DTEXT_GLOBAL);
			break; // Zaustavi loop jer dalje nece moci da se kreira svakako
		}
	}

	// Mega Boxes
	for(new i = 0; i < sizeof(megaBoxObject); ++i)
	{

		if(CreateObject(964, megaBoxObject[i][0], megaBoxObject[i][1], megaBoxObject[i][2], megaBoxObject[i][3], megaBoxObject[i][4], megaBoxObject[i][5]) != INVALID_OBJECT_ID)
		{
			printf("[HG] Mega kutija broj %i je kreirana na X: %.2f Y: %.2f Z: %.2f", megaBoxObject[i][1], megaBoxObject[i][2], megaBoxObject[i][3]);
			continue; // Nastavi loop
		}
		else
		{
			printf("[HG] Neuspelo kreiranje mega kutije ID %d (limit objekata od %d je prekoracen)!", i, MAX_OBJECTS);
			break; // Zaustavi loop jer dalje nece moci da se kreira svakako
		}
	}
	// Mega Box Labels
	for(new i = 0; i < sizeof(megaBoxObject); ++i)
	{
		if(Create3DTextLabel("/megakutija", 0xF81414FF, megaBoxObject[i][0], megaBoxObject[i][1], megaBoxObject[i][2], 20.0, 0) != INVALID_3DTEXT_ID)
		{
			printf("[HG] Label za mega kutiju broj %i je kreiran na X: %.2f Y: %.2f Z: %.2f", megaBoxObject[i][1], megaBoxObject[i][2], megaBoxObject[i][3]);
			continue; // Nastavi loop
		}
		else
		{
			printf("[HG] Neuspelo kreiranje labela za mega kutiju ID %d (limit labela od %d je prekoracen)!", i, _:MAX_3DTEXT_GLOBAL);
			break; // Zaustavi loop jer dalje nece moci da se kreira svakako
		}
	}

	// Objects
	CreateHungerGamesMap();

	return Y_HOOKS_CONTINUE_RETURN_1;
}

hook OnPlayerDeath(playerid, killerid, reason)
{
	if(Iter_Contains(HungerPlayers, playerid))
	{
		Iter_Remove(HungerPlayers, playerid);
		if(Iter_Count(HungerPlayers) == 1)
		{
			va_SendClientMessageToAll(-1, "[HungerGames] Igrac %s je ubio igraca %s i pobedio u Hunger Gamesu! Cestitke pobedniku!", PlayerName[killerid], PlayerName[playerid]);
			
			GivePlayerMoney(killerid, 30000);

			Iter_Remove(HungerPlayers, killerid);

			SetPlayerHealth(killerid, 0.0);

			hungerGamesStarted = false;

			stop Timer_BoxMessage[playerid];
			stop Timer_BoxMessage[killerid];

			openedMegaBox[playerid] = false;
			//SpawnPlayer(killerid); Ovde dodati da se igrac spawna nakon smrti, zavisi od vas

			return Y_HOOKS_CONTINUE_RETURN_1;
		}
		else
		{
			va_SendClientMessageToAll(-1, "[HungerGames] Igrac %s je ubio igraca %s! Preostalo ucesnika %d!", PlayerName[killerid], PlayerName[playerid], Iter_Count(HungerPlayers));

			stop Timer_BoxMessage[playerid];

			return Y_HOOKS_CONTINUE_RETURN_1;
		}
	}
	return Y_HOOKS_CONTINUE_RETURN_1;
}

hook OnPlayerConnect(playerid)
{
	GetPlayerName(playerid, PlayerName[playerid]);
	return Y_HOOKS_CONTINUE_RETURN_1;
}

hook OnPlayerDisconnect(playerid, reason)
{
	if(playerJoinedHunger[playerid])
	{
		Iter_Remove(HungerPlayers, playerid);
		if(Iter_Count(HungerPlayers) == 1)
		{
			new winnerID = Iter_First(HungerPlayers);
			va_SendClientMessageToAll(-1, "[HungerGames] Igrac %s je izasao sa servera te je igrac %s pobedio u Hunger Gamesu! Cestitke pobedniku!", PlayerName[playerid], winnerID);
			
			GivePlayerMoney(winnerID, 30000);

			Iter_Remove(HungerPlayers, winnerID);

			SetPlayerHealth(winnerID, 0.0);

			hungerGamesStarted = false;

			stop Timer_BoxMessage[playerid];
			stop Timer_BoxMessage[winnerID];

			openedMegaBox[playerid] = false;
			//SpawnPlayer(killerid); Ovde dodati da se igrac spawna nakon smrti, zavisi od vas

			return Y_HOOKS_CONTINUE_RETURN_1;
		}
		else
		{
			va_SendClientMessageToAll(-1, "[HungerGames] Igrac %s je izasao sa servera - Preostalo ucesnika %d!", PlayerName[playerid], Iter_Count(HungerPlayers));

			stop Timer_BoxMessage[playerid];

			return Y_HOOKS_CONTINUE_RETURN_1;
		}
	}
	return Y_HOOKS_CONTINUE_RETURN_1;
}

hook OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys == KEY_YES)
	{
		if(playerJoinedHunger[playerid])
		{
			new bool:openedBox;
			for(new box_id = 0; box_id < sizeof(boxObject); box_id++)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 2.0, boxObject[box_id][0], boxObject[box_id][1], boxObject[box_id][2]))
					continue; // Nastavi loop

				if(gettime() < canOpenBox[playerid])
				{
					SendClientMessage(playerid, -1, "[HungerGames] Moras cekati 10 sekundi pre otvaranja druge kutije!");
					break; // Zaustavi loop
				}

				new
					weaponName[32],
					randomWeapon = (random_int(17, 33) + 1),
					randomAmmo = (random_int(5, 15));

				// #TODO: Fix this > make it smarter.
				if(GetPlayerWeapon(playerid) == randomWeapon) {
					ResetPlayerWeapons(playerid);
				}

				GivePlayerWeapon(playerid, randomWeapon, randomAmmo);

				GetWeaponName(randomWeapon, weaponName, sizeof(weaponName));

				va_SendClientMessage(playerid, -1, "[HungerGames] Izvukao si %s iz kutije!", weaponName);

				Timer_BoxMessage[playerid] = repeat BoxCountdown(playerid);
				canOpenBox[playerid] = (gettime() + 10);

				openedBox = true;

				break; // Zaustavi loop
			}

			if(!openedBox)
			{
				for(new box_id = 0; box_id < sizeof(megaBoxObject); box_id++)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 2.0, megaBoxObject[box_id][0], megaBoxObject[box_id][1], megaBoxObject[box_id][2]))
						continue; // Nastavi loop

					if(openedMegaBox[playerid])
					{
						SendClientMessage(playerid, -1, "[HungerGames] Vec si otvorio Mega Kutiju!");
						break; // Zaustavi loop
					}

					SendClientMessage(playerid, -1, "Otvorio si Mega Kutiju!");

					GivePlayerWeapon(playerid, 24, 10);
					GivePlayerWeapon(playerid, 31, 30);

					SetPlayerArmour(playerid, 30.0);

					openedMegaBox[playerid] = true;

					break; // Zaustavi loop
				}
			}
		}
	}
	return 1;
}

// ---
// Commands
// ---

YCMD:kutija(playerid, params[], help)
{
	if(!playerJoinedHunger[playerid])
		return SendClientMessage(playerid, -1, "[HungerGames] Nisi u Igrama Gladi!");

	if(gettime() < canOpenBox[playerid])
		return SendClientMessage(playerid, -1, "[HungerGames] Moras cekati 10 sekundi pre otvaranja druge kutije!");

	for(new box_id = 0; box_id < sizeof(boxObject); box_id++)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, boxObject[box_id][0], boxObject[box_id][1], boxObject[box_id][2]))
			continue; // Nastavi loop

		new
			weaponName[32],
			randomWeapon = (random_int(17, 33) + 1),
			randomAmmo = (random_int(5, 15));

		// #TODO: Fix this > make it smarter.
		if(GetPlayerWeapon(playerid) == randomWeapon) {
			ResetPlayerWeapons(playerid);
		}

		GivePlayerWeapon(playerid, randomWeapon, randomAmmo);

		GetWeaponName(randomWeapon, weaponName, sizeof(weaponName));

		va_SendClientMessage(playerid, -1, "[HungerGames] Izvukao si %s iz kutije!", weaponName);

		Timer_BoxMessage[playerid] = repeat BoxCountdown(playerid);
		canOpenBox[playerid] = (gettime() + 10);

		break; // Zaustavi loop
	}
	return COMMAND_OK;
}

YCMD:hgcount(playerid, params[], help)
{
	//if(PlayerInfo[playerid][pAdmin] < 1)
		//return SendClientMessage(playerid, -1, "[HungerGames] Samo admin!");

	if(hungerGamesStarted)
		return SendClientMessage(playerid, -1, "[HungerGames] Hunger Games nije pokrenut!");

	if(Iter_Count(HungerPlayers) < 3)
		return SendClientMessage(playerid, -1, "[HungerGames] Nema dovoljno igraca!");

	hungerGameStarting = true;

	foreach(new i : HungerPlayers)
	{
		SendClientMessage(i, -1, "[HungerGames] Igra pocinje za 5 sekundi!");
	}

	defer HungerGamesCounter(4);
	return COMMAND_OK;
}

YCMD:pokrenihungergames(playerid, params[], help) //Pokretanje igre koje moze samo RCON!
{
	if(!IsPlayerAdmin(playerid))
		return SendClientMessage(playerid, -1, "[HungerGames]Samo admin!"); //Ovde dodati proveru za admina, u zavisnosti od vaseg admin sistema

	if(hungerGamesStarted)
		return SendClientMessage(playerid, -1, "[HungerGames]Hunger Games je vec pokrenut!");

	va_SendClientMessageToAll(-1, "[HungerGames] Admin %s je pokrenuo Hunger Games! /joinhungergames", PlayerName[playerid]);

	hungerGamesStarted = true;
	hungerGameStarting = false;

	return COMMAND_OK;
}

YCMD:joinhungergames(playerid, params[], help) //Zanemarite shit kod xD
{
	if(!hungerGamesStarted)
		return SendClientMessage(playerid, -1, "[HungerGames] Hunger Games nije pokrenut!");

	if(playerJoinedHunger[playerid])
		return SendClientMessage(playerid, -1, "[HungerGames] Vec si u Hunger Gamesu!");

	if(hungerGameStarting)
		return SendClientMessage(playerid, -1, "[HungerGames] Zakasnili ste!");

	new spawn_id = Iter_Alloc(HungerPlayers);

	if(spawn_id == INVALID_ITERATOR_SLOT)
		return SendClientMessage(playerid, -1, "[HungerGames] Slotovi su puni!");

	TogglePlayerControllable(playerid, 0);
	playerJoinedHunger[playerid] = true;

	SetPlayerPos(playerid, spawnPositions[spawn_id][0], spawnPositions[spawn_id][1], spawnPositions[spawn_id][2]);
	SetPlayerCameraPos(playerid, spawnPositions[spawn_id][0], spawnPositions[spawn_id][1], spawnPositions[spawn_id][2]);
	SetPlayerCameraLookAt(playerid, spawnPositions[spawn_id][3], spawnPositions[spawn_id][4], spawnPositions[spawn_id][5], CAMERA_CUT);

	SendClientMessage(playerid, -1, "[HungerGames] Usao si u Hunger Games - Igra uskoro pocinje, srecno!");
	return 1;
}

YCMD:hungertest(playerid, params[], help) //Ovo je komanda za teleport do mape
{
	//playerJoinedHunger[playerid] = true; Korisceno prilikom testa, sada ne treba
	SetPlayerPos(playerid, 427.0863, 7371.1953, 1.7694);
	return COMMAND_OK;
}

// ---
// Timers
// ---

timer BoxCountdown[1000](playerid)
{
	if(!Iter_Contains(HungerPlayers, playerid))
	{
		stop Timer_BoxMessage[playerid];
		return;
	}

	if(gettime() < canOpenBox[playerid])
	{
		va_GameTextForPlayer(playerid, "%d sekundi do nove kutije.", 1000, 3, canOpenBox[playerid] - gettime());
	}
	else
	{
		SendClientMessage(playerid, -1, "[HungerGames] Sada mozete otvoriti novu kutiju!");
		stop Timer_BoxMessage[playerid];
	}
}

/// <sumarry>
/// Hunger Games counter
/// </sumarry>
timer HungerGamesCounter[1000](step)
{
	if(!hungerGamesStarted)
		return;

	switch(step)
	{
		case 0:
		{
			foreach(new i : HungerPlayers)
			{
				GameTextForPlayer(i, "IGRA JE POCELA!", 1000, 3);
				TogglePlayerControllable(i, 1);
				SetCameraBehindPlayer(i);
			}
		}
		default:
		{
			foreach(new i : HungerPlayers)
			{
				va_GameTextForPlayer(i, "Igra pocinje za %d...", 1000, 3, step);
				defer HungerGamesCounter(step - 1);
			}
		}
	}
}
